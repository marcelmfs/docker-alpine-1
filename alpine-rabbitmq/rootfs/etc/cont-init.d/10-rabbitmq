#!/usr/bin/with-contenv sh

if [ -z ${RABBITMQ_CONFIG} ]; then
    if [ -z ${RABBITMQ_CONFIGSCRIPT} ]; then
        echo "==> Configuring rabbitmq from environment"

        if [ ! -z ${RABBITMQ_ERLANGCOOKIE} ]; then
            echo ${RABBITMQ_ERLANGCOOKIE} > /var/lib/rabbitmq/.erlang.cookie
            chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie
            chmod 400 /var/lib/rabbitmq/.erlang.cookie
        fi

        su -c " \
            rabbitmq-server -detached; \
            sleep 8; \
            rabbitmqctl start_app; \
            sleep 4; \
        " rabbitmq

        if [ ! -z ${RABBITMQ_MQTT} ] && [ ${RABBITMQ_MQTT} -eq 1 ]; then
            rabbitmq-plugins enable --offline rabbitmq_mqtt
        fi

        if [ ! -z ${RABBITMQ_STOMP} ] && [ ${RABBITMQ_STOMP} -eq 1 ]; then
            rabbitmq-plugins enable --offline rabbitmq_stomp
        fi

        if [ ! -z ${RABBITMQ_PLUGINS} ]; then
            PLUGINS=$(echo "${RABBITMQ_PLUGINS}"|tr ',' ' ')
            rabbitmq-plugins enable --offline ${PLUGINS}
        fi

        if [ ! -z ${RABBITMQ_GUESTPASSWORD} ]; then
            su -c "rabbitmqctl change_password guest ${RABBITMQ_GUESTPASSWORD}" rabbitmq
        fi

        if [ ! -z ${RABBITMQ_USERNAME} ] && [ ! -z ${RABBITMQ_PASSWORD} ]; then
            su -c " \
            rabbitmqctl add_user ${RABBITMQ_USERNAME} ${RABBITMQ_PASSWORD}; \
            rabbitmqctl set_user_tags ${RABBITMQ_USERNAME} administrator; \
            rabbitmqctl set_permissions -p / ${RABBITMQ_USERNAME} \".*\" \".*\" \".*\"; \
            " rabbitmq
        fi

        su -c " \
        rabbitmqctl stop_app; \
        sleep 4; \
        " rabbitmq

        if [ ! -z ${RABBITMQ_CLUSTER} ]; then
            if [ ! -z ${RABBITMQ_CLUSTERWAIT} ]; then
                sleep ${RABBITMQ_CLUSTERWAIT}
            fi

            if [ -z ${RABBITMQ_CLUSTERRAM} ]; then
                su -c "rabbitmqctl join_cluster ${RABBITMQ_CLUSTER}" rabbitmq
            else
                su -c "rabbitmqctl join_cluster --ram ${RABBITMQ_CLUSTER}" rabbitmq
            fi

            su -c " \
            sleep 4; \
            rabbitmqctl cluster_status; \
            " rabbitmq
        fi

        su -c " \
        rabbitmqctl stop; \
        sleep 4; \
        " rabbitmq
    else
        echo "==> Configuring rabbitmq from script"

        su -c "/bin/sh ${RABBITMQ_CONFIGSCRIPT}" rabbitmq
    fi

    export RABBITMQ_CONFIG=1
    printf "%s" "${RABBITMQ_CONFIG}" > /var/run/s6/container_environment/RABBITMQ_CONFIG
fi
